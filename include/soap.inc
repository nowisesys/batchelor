<?php

// -------------------------------------------------------------------------------
//  Copyright (C) 2007-2018 Anders LÃ¶vgren
//
//  This program is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation; either version 2 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
// -------------------------------------------------------------------------------

define("WS_SOAP_INTERFACE_VERSION", "1.0");

// 
// Get WSDL URL.
// 
function get_wsdl_url($resolve = true)
{
        // 
        // Use the cached WSDL if it exists:
        // 
        $wsdl = "../source/ws/schema/wsdl/batchelor.wsdl.cache";
        if (file_exists($wsdl)) {
                return $wsdl;
        }

        // 
        // Default options:
        // 
        $opts = array(
                "scheme" => "http",
                "addr"   => "localhost",
                "port"   => 80,
                "path"   => "/batchelor/ws"
        );

        // 
        // Adjust from global values:
        // 
        if (isset($_SERVER['HTTPS'])) {
                $opts['scheme'] = "https";
        }
        if (isset($_SERVER['SERVER_ADDR'])) {
                $opts['addr'] = $_SERVER['SERVER_ADDR'];
        }
        if (isset($_SERVER['SERVER_PORT'])) {
                $opts['port'] = $_SERVER['SERVER_PORT'];
        }
        if (isset($_SERVER['SCRIPT_NAME'])) {
                $opts['path'] = dirname(dirname($_SERVER['SCRIPT_NAME']));
        }

        if ($opts['path'][0] == '/') {
                $opts['path'] = substr($opts['path'], 1);
        }
        if ($resolve) {
                $opts['addr'] = gethostbyaddr($opts['addr']);
        }
        if (strncmp($opts['addr'], "::", 2) == 0) {
                $opts['addr'] = "[" . $opts['addr'] . "]";      // IPv6 address need brackets
        }

        $wsdl = sprintf("%s://%s:%d/%s/schema/wsdl/?wsdl", $opts['scheme'], $opts['addr'], $opts['port'], $opts['path']);
        return $wsdl;
}

// 
// The content below was generated by utils/soap.php. Use this script for 
// updating the SOAP binding classes defined here.
// 
//
// Synopsis: ResumeParams(jobIdentity)
//
class ResumeParams
{

        public $job;        // jobIdentity

        public function __construct($job)
        {
                $this->job = $job;
        }

}

//
// Synopsis: JobIdentity(string, string)
//
class JobIdentity
{

        public $jobID;      // string
        public $result;     // string

        public function __construct($jobID, $result)
        {
                $this->jobID = $jobID;
                $this->result = $result;
        }

}

//
// Synopsis: ResumeResponse(boolean)
//
class ResumeResponse
{

        public $return;     // boolean

        public function __construct($return)
        {
                $this->return = $return;
        }

}

//
// Synopsis: SuspendParams(jobIdentity)
//
class SuspendParams
{

        public $job;        // jobIdentity

        public function __construct($job)
        {
                $this->job = $job;
        }

}

//
// Synopsis: SuspendResponse(boolean)
//
class SuspendResponse
{

        public $return;     // boolean

        public function __construct($return)
        {
                $this->return = $return;
        }

}

//
// Synopsis: QueueParams(string, string)
//
class QueueParams
{

        public $sort;       // string
        public $filter;     // string

        public function __construct($sort, $filter)
        {
                $this->sort = $sort;
                $this->filter = $filter;
        }

}

//
// Synopsis: QueueResponse(queuedJob)
//
class QueueResponse
{

        public $return;     // queuedJob

        public function __construct($return)
        {
                $this->return = $return;
        }

}

//
// Synopsis: QueuedJob(jobIdentity, string)
//
class QueuedJob
{

        public $jobIdentity;        // jobIdentity
        public $state;      // string

        public function __construct($jobIdentity, $state)
        {
                $this->jobIdentity = $jobIdentity;
                $this->state = $state;
        }

}

//
// Synopsis: EnqueueParams(string)
//
class EnqueueParams
{

        public $indata;     // string

        public function __construct($indata)
        {
                $this->indata = $indata;
        }

}

//
// Synopsis: EnqueueResponse(enqueueResult)
//
class EnqueueResponse
{

        public $return;     // enqueueResult

        public function __construct($return)
        {
                $this->return = $return;
        }

}

//
// Synopsis: EnqueueResult(string, string, string, int, string)
//
class EnqueueResult
{

        public $date;       // string
        public $jobID;      // string
        public $result;     // string
        public $stamp;      // int
        public $time;       // string

        public function __construct($date, $jobID, $result, $stamp, $time)
        {
                $this->date = $date;
                $this->jobID = $jobID;
                $this->result = $result;
                $this->stamp = $stamp;
                $this->time = $time;
        }

}

//
// Synopsis: WatchParams(int)
//
class WatchParams
{

        public $stamp;      // int

        public function __construct($stamp)
        {
                $this->stamp = $stamp;
        }

}

//
// Synopsis: WatchResponse(queuedJob)
//
class WatchResponse
{

        public $return;     // queuedJob

        public function __construct($return)
        {
                $this->return = $return;
        }

}

//
// Synopsis: FopenParams(jobIdentity, string)
//
class FopenParams
{

        public $job;        // jobIdentity
        public $file;       // string

        public function __construct($job, $file)
        {
                $this->job = $job;
                $this->file = $file;
        }

}

//
// Synopsis: FopenResponse(base64Binary)
//
class FopenResponse
{

        public $return;     // base64Binary

        public function __construct($return)
        {
                $this->return = $return;
        }

}

//
// Synopsis: OpendirParams()
//
class OpendirParams
{

        public function __construct()
        {
                
        }

}

//
// Synopsis: OpendirResponse(jobIdentity)
//
class OpendirResponse
{

        public $return;     // jobIdentity

        public function __construct($return)
        {
                $this->return = $return;
        }

}

//
// Synopsis: StatParams(jobIdentity)
//
class StatParams
{

        public $job;        // jobIdentity

        public function __construct($job)
        {
                $this->job = $job;
        }

}

//
// Synopsis: StatResponse(queuedJob)
//
class StatResponse
{

        public $return;     // queuedJob

        public function __construct($return)
        {
                $this->return = $return;
        }

}

//
// Synopsis: ReaddirParams(jobIdentity)
//
class ReaddirParams
{

        public $job;        // jobIdentity

        public function __construct($job)
        {
                $this->job = $job;
        }

}

//
// Synopsis: ReaddirResponse(string)
//
class ReaddirResponse
{

        public $return;     // string

        public function __construct($return)
        {
                $this->return = $return;
        }

}

//
// Synopsis: DequeueParams(jobIdentity)
//
class DequeueParams
{

        public $job;        // jobIdentity

        public function __construct($job)
        {
                $this->job = $job;
        }

}

//
// Synopsis: DequeueResponse(boolean)
//
class DequeueResponse
{

        public $return;     // boolean

        public function __construct($return)
        {
                $this->return = $return;
        }

}

//
// Synopsis: VersionParams()
//
class VersionParams
{

        public function __construct()
        {
                
        }

}

//
// Synopsis: VersionResponse(string)
//
class VersionResponse
{

        public $return;     // string

        public function __construct($return)
        {
                $this->return = $return;
        }

}
