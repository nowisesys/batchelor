
   Getting started with Web Services and Batchelor
  
** GENERAL:

   Since version 0.7.0 support for web services has been added. W3C defines
   an web service as "a software system designed to support interoperable 
   machine-to-machine interaction over a network". 
   
   Batchelor defines an internal API that is exposed to web service clients
   thru different Web Service protocols/interfaces. The interfaces provided
   are:
   
   *) XML-RPC   : Following UserLand Software's specification.
   *) HTTP RPC  : A lightweight RPC over HTTP.
   
   All Web Service interfaces are located under source/ws/.
   
** SETUP:

   The web server must be configured to allow the various web services under
   source/ws/ to be callable. For Apache this is done inside conf/config.inc
   and by appending -D WEB_SERVICE to Apache's command line options.
   
   In Gentoo, the -D WEB_SERVICE define to Apache can be set in the config
   file /etc/conf.d/apache2
   
   Make sure to set permissions in conf/config.inc for thoose web service
   interfaces you like to enable. By default, all web services are locked
   down to localhost access.

** TESTING:

   An client for testing the Web Services are provided in utils/ws.php. This
   client let see all headers in the response.

** HTTP RPC:

   This is a lightweight protocol that uses URI encoded requests sent either 
   to the request broker or direct to the script thru HTTP. The output (response)
   format is configurable on the server and can also be selected by the
   caller (the client). The output formats are:
   
     * XML   : Uses a minimal set of tags.
     * FOA   : Fast Object and Array encoding (described in the manual).

   The default format is FOA.
   
   ** Manual:
   ------------------------------------------
   
   The full manual is available and browsable online by visiting:
   
     http://localhost/batchelor/ws/http/docs?format=html

   ** Examples:
   ------------------------------------------
   
   An request to list all queued jobs (thru the request broker) looks 
   like this:
   
     http://localhost/batchelor/ws/http/queue?format=xml

   ** Request Broker vs. Script Direct:
   ------------------------------------------
   
   Listing result files thru the request broker:
    
     http://localhost/batchelor/ws/http/readdir?result=1234&jobid=99
       
   Listing result files thru direct access:
     
     http://localhost/batchelor/ws/http/result.php?result=1234&jobid=99
   
   ** Metods:
   ------------------------------------------

   These methods are the called to interact with the queue:
   
     suspend   : Suspend an already running job.
     resume    : Resume a job thats in paused or stopped state.
     enqueue   : Enqueue and start new job.
     dequeue   : Delete an running or finished job.
     queue     : List queued and finished jobs.
     watch     : Monitor queue for finished jobs.
     opendir   : List result directories.
     readdir   : List files in a specific result directory. 
     fopen     : Get content of an result file. 

   These methods provides info about the HTTP RPC service:
   
     info      : List all methods thats part of the API.
     func      : Show detailed information about a single RPC method.
     docs      : Show the HTTP RPC method API as manual.
     
   These methods are for error handling:
   
     errors    : Return an collection of all defined errors (codes and messages).
     errmsg    : Return error message string for an given error code.

   The func method can be used by a web service client to find out how to
   call any of the methods. Try it out by either running CLI:
   
     bash$> cd utils
     bash$> php ws.php --func=func --params='name=readdir'

     -- or HTTP: ---
     
     http://localhost/batchelor/ws/http/func?name=readdir
   
   See the manual for more information.
   
   ** Error handling:
   ------------------------------------------
   
   The HTTP status code 200 gets returned for any successful method call,
   that is, if everything worked out as excepted. Anything else is
   considered and error.
   
   Errors are reported with these HTTP status codes:
   
     400 (Bad Request)
     403 (Forbidden)
     404 (Not Found)
     409 (Conflict)
     500 (Internal Server Error)
   
   These error code are a quick way to find out if any problem occured. 
   
   The error details are in the custom HTTP entiety X-RPC-Error: NN, where NN 
   is an error number. The error numbers are defined in include/ws.inc, but its 
   associated error message is accessable from the client by sending another 
   query to:
   
     http://localhost/batchelor/ws/http/errmsg?code=

   If you get anything that HTTP 200 and if X-RPC-Error is set, then its an 
   method call error.
   
** XML-RPC:

   This web service interface was written based on the XML-RPC specification
   from UserLand Software. Its an traditional web service protocol using HTTP 
   as its transport protocol with the request and response encoded in XML
   and delivered in the HTTP body.

   ** Error handling:
   ------------------------------------------
   
   The HTTP status code is always 200 and errors are encoded in the XML
   payload.
   
   ** Specification:
   ------------------------------------------

   The used specification are: http://www.xmlrpc.com/spec

Anders Lövgren,
2008-09-30
