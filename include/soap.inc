<?php

// -------------------------------------------------------------------------------
//  Copyright (C) 2007-2009 Anders LÃ¶vgren
//
//  This program is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation; either version 2 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
// -------------------------------------------------------------------------------

define ("WS_SOAP_INTERFACE_VERSION", "1.0");

// 
// Get WSDL URL.
// 
function get_wsdl_url() 
{
    // 
    // Use the cached WSDL if it exists:
    // 
    $wsdl = "../source/ws/schema/wsdl/batchelor.wsdl.cache";
    if(file_exists($wsdl)) {
	return $wsdl;
    }
    
    // 
    // Default options:
    // 
    $opts = array( 
		   "scheme" => "http",
		   "addr" => "localhost",
		   "port" => 80,
		   "path" => "/batchelor/ws" 
		   );
    
    // 
    // Adjust from global values:
    // 
    if(isset($_SERVER['HTTPS'])) {
	$opts['scheme'] = "https";
    }
    if(isset($_SERVER['SERVER_ADDR'])) {
	$opts['addr'] = $_SERVER['SERVER_ADDR'];
    }
    if(isset($_SERVER['SERVER_PORT'])) {
	$opts['port'] = $_SERVER['SERVER_PORT'];
    }
    if(isset($_SERVER['SCRIPT_NAME'])) {
	$opts['path'] = dirname(dirname($_SERVER['SCRIPT_NAME']));
    }
    if($opts['path'][0] == '/') {
	$opts['path'] = substr($opts['path'], 1);
    }
    
    $wsdl = sprintf("%s://%s:%d/%s/schema/wsdl/?wsdl", $opts['scheme'], $opts['addr'], $opts['port'], $opts['path']);
    return $wsdl;
}

// 
// The content below was generated by utils/soap.php. Use this script for 
// updating the SOAP binding classes defined here.
// 

//
// Synopsis: ResumeParams(jobIdentity)
//
class ResumeParams {
    var $job;	// jobIdentity
    function ResumeParams($job) {
        $this->job = $job;
    }
}

//
// Synopsis: JobIdentity(string, string)
//
class JobIdentity {
    var $jobID;	// string
    var $result;	// string
    function JobIdentity($jobID, $result) {
        $this->jobID = $jobID;
        $this->result = $result;
    }
}

//
// Synopsis: ResumeResponse(boolean)
//
class ResumeResponse {
    var $return;	// boolean
    function ResumeResponse($return) {
        $this->return = $return;
    }
}

//
// Synopsis: SuspendParams(jobIdentity)
//
class SuspendParams {
    var $job;	// jobIdentity
    function SuspendParams($job) {
        $this->job = $job;
    }
}

//
// Synopsis: SuspendResponse(boolean)
//
class SuspendResponse {
    var $return;	// boolean
    function SuspendResponse($return) {
        $this->return = $return;
    }
}

//
// Synopsis: QueueParams(string, string)
//
class QueueParams {
    var $sort;	// string
    var $filter;	// string
    function QueueParams($sort, $filter) {
        $this->sort = $sort;
        $this->filter = $filter;
    }
}

//
// Synopsis: QueueResponse(queuedJob)
//
class QueueResponse {
    var $return;	// queuedJob
    function QueueResponse($return) {
        $this->return = $return;
    }
}

//
// Synopsis: QueuedJob(jobIdentity, string)
//
class QueuedJob {
    var $jobIdentity;	// jobIdentity
    var $state;	// string
    function QueuedJob($jobIdentity, $state) {
        $this->jobIdentity = $jobIdentity;
        $this->state = $state;
    }
}

//
// Synopsis: EnqueueParams(string)
//
class EnqueueParams {
    var $indata;	// string
    function EnqueueParams($indata) {
        $this->indata = $indata;
    }
}

//
// Synopsis: EnqueueResponse(enqueueResult)
//
class EnqueueResponse {
    var $return;	// enqueueResult
    function EnqueueResponse($return) {
        $this->return = $return;
    }
}

//
// Synopsis: EnqueueResult(string, string, string, int, string)
//
class EnqueueResult {
    var $date;	// string
    var $jobID;	// string
    var $result;	// string
    var $stamp;	// int
    var $time;	// string
    function EnqueueResult($date, $jobID, $result, $stamp, $time) {
        $this->date = $date;
        $this->jobID = $jobID;
        $this->result = $result;
        $this->stamp = $stamp;
        $this->time = $time;
    }
}

//
// Synopsis: WatchParams(int)
//
class WatchParams {
    var $stamp;	// int
    function WatchParams($stamp) {
        $this->stamp = $stamp;
    }
}

//
// Synopsis: WatchResponse(queuedJob)
//
class WatchResponse {
    var $return;	// queuedJob
    function WatchResponse($return) {
        $this->return = $return;
    }
}

//
// Synopsis: FopenParams(jobIdentity, string)
//
class FopenParams {
    var $job;	// jobIdentity
    var $file;	// string
    function FopenParams($job, $file) {
        $this->job = $job;
        $this->file = $file;
    }
}

//
// Synopsis: FopenResponse(base64Binary)
//
class FopenResponse {
    var $return;	// base64Binary
    function FopenResponse($return) {
        $this->return = $return;
    }
}

//
// Synopsis: OpendirParams()
//
class OpendirParams {
    function OpendirParams() {
    }
}

//
// Synopsis: OpendirResponse(jobIdentity)
//
class OpendirResponse {
    var $return;	// jobIdentity
    function OpendirResponse($return) {
        $this->return = $return;
    }
}

//
// Synopsis: StatParams(jobIdentity)
//
class StatParams {
    var $job;	// jobIdentity
    function StatParams($job) {
        $this->job = $job;
    }
}

//
// Synopsis: StatResponse(queuedJob)
//
class StatResponse {
    var $return;	// queuedJob
    function StatResponse($return) {
        $this->return = $return;
    }
}

//
// Synopsis: ReaddirParams(jobIdentity)
//
class ReaddirParams {
    var $job;	// jobIdentity
    function ReaddirParams($job) {
        $this->job = $job;
    }
}

//
// Synopsis: ReaddirResponse(string)
//
class ReaddirResponse {
    var $return;	// string
    function ReaddirResponse($return) {
        $this->return = $return;
    }
}

//
// Synopsis: DequeueParams(jobIdentity)
//
class DequeueParams {
    var $job;	// jobIdentity
    function DequeueParams($job) {
        $this->job = $job;
    }
}

//
// Synopsis: DequeueResponse(boolean)
//
class DequeueResponse {
    var $return;	// boolean
    function DequeueResponse($return) {
        $this->return = $return;
    }
}

//
// Synopsis: VersionParams()
//
class VersionParams {
    function VersionParams() {
    }
}

//
// Synopsis: VersionResponse(string)
//
class VersionResponse {
    var $return;	// string
    function VersionResponse($return) {
        $this->return = $return;
    }
}

?>
